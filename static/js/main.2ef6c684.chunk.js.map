{"version":3,"sources":["components/utils/calculations.js","components/CurrentGame.js","components/Footer.js","components/Header.js","components/Stats.js","App.js","index.js"],"names":["winningPlays","Result","playerA","playerB","played","style","color","includes","name","WinRatio","array","getSelectedPlayerName","games","win","forEach","arr","selectedPlayer","otherPlayer","CurrentGame","ws","useRef","useState","setPlayerA","setPlayerB","useEffect","current","WebSocket","onopen","console","log","onmessage","e","response","JSON","parse","data","error","onclose","close","Icon","player","Row","Col","Card","height","Title","fontSize","fontWeight","border","Footer","textAlign","bottom","left","position","width","styled","h1","Header","className","History","history","setHistory","playerList","setPlayerList","specificPlayer","setSpecificPlayer","fetchStats","a","axios","get","headers","then","playerNames","Set","map","h","sort","sample","catch","optionNames","Object","create","value","label","numberOfGames","filter","length","specificPlayerPlayed","p","f","maxPlayedHand","flow","countBy","entries","partialRight","maxBy","last","head","matches","Table","striped","bordered","hover","options","onChange","placeholder","defaultValue","isSearchable","backgroundColor","gameId","t","App","Container","Stats","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAMA,EAAe,CAAC,gBAAiB,iBAAkB,cAE5CC,EAAS,SAACC,EAASC,GAC7B,OAAKD,GAAYC,EAEbD,EAAQE,SAAWD,EAAQC,OAAe,qBAAKC,MAAO,CAAEC,MAAO,SAArB,qBAE1CN,EAAaO,SAASL,EAAQE,OAAS,IAAMD,EAAQC,QAC/C,qBAAKC,MAAO,CAAEC,MAAO,WAArB,SAAmCJ,EAAQM,OAG9C,qBAAKH,MAAO,CAAEC,MAAO,WAArB,SAAmCH,EAAQK,OARjB,MAYvBC,EAAW,SAACC,EAAOC,EAAuBC,GACpD,IAAIC,EAAM,EAQV,OAPAH,EAAMI,SAAQ,SAACC,GACZ,MACGJ,IAA0BI,EAAIb,QAAQM,KAAO,CAACO,EAAIb,QAASa,EAAIZ,SAAW,CAACY,EAAIZ,QAASY,EAAIb,SAD/F,mBAAKc,EAAL,KAAqBC,EAArB,KAGAJ,GAAOb,EAAaO,SAASS,EAAeZ,OAAS,IAAMa,EAAYb,QAAU,EAAI,KAGlF,GAAN,OAAWS,EAAMD,EAAS,IAA1B,cAAmCC,EAAnC,eAA6CD,EAA7C,MCiEYM,EAnFK,WACjB,IAAMC,EAAKC,iBAAO,MAClB,EAA8BC,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAA8BD,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAEAC,qBAAU,WAIP,GAHAL,EAAGM,QAAU,IAAIC,UAAU,gDAC3BP,EAAGM,QAAQE,OAAS,kBAAMC,QAAQC,IAAI,cAEjCV,EAAGM,QAoBR,OAlBAN,EAAGM,QAAQK,UAAY,SAACC,GACrB,IAAMC,EAAWC,KAAKC,MAAMH,EAAEI,MAC9B,IACGb,EAAW,CACRd,KAAMyB,KAAKC,MAAMF,GAAU9B,QAAQM,KACnCJ,OAAQ6B,KAAKC,MAAMF,GAAU9B,QAAQE,SAGxCmB,EAAW,CACRf,KAAMyB,KAAKC,MAAMF,GAAU7B,QAAQK,KACnCJ,OAAQ6B,KAAKC,MAAMF,GAAU7B,QAAQC,SAEzC,MAAOgC,GACNR,QAAQC,IAAIO,KAGlBjB,EAAGM,QAAQY,QAAU,kBAAMlB,EAAGM,QAAQa,SAE/B,kBAAMnB,EAAGM,QAAQa,WACxB,IAEH,IAAMC,EAAO,SAACC,GACX,OAAQA,EAAOpC,QACZ,IAAK,OACF,OAAO,cAAC,IAAD,IACV,IAAK,WACF,OAAO,cAAC,IAAD,IACV,IAAK,QACF,OAAO,cAAC,IAAD,IACV,QACG,OAAO,wCAGhB,OACG,qCACG,8CACA,uBACA,eAACqC,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,UACG,eAACC,EAAA,EAAD,CAAMtC,MAAO,CAAEuC,OAAQ,SAAvB,UACG,cAACD,EAAA,EAAKE,MAAN,yBACA,6BAAK3C,EAAQM,OACb,sBAAMH,MAAO,CAAEC,MAAO,UAAWwC,SAAU,QAA3C,SAAsDP,EAAKrC,KAC3D,qBAAKG,MAAO,CAAEC,MAAO,UAAWyC,WAAY,QAA5C,SAAuD7C,EAAQE,cAIrE,cAACsC,EAAA,EAAD,UACG,eAACC,EAAA,EAAD,CAAMtC,MAAO,CAAEuC,OAAQ,QAASI,OAAQ,QAAxC,UACG,cAACL,EAAA,EAAKE,MAAN,UACG,0CAEH,uBACA,6BACG,4BAAI5C,EAAOC,EAASC,YAK7B,cAACuC,EAAA,EAAD,UACG,eAACC,EAAA,EAAD,CAAMtC,MAAO,CAAEuC,OAAQ,SAAvB,UACG,cAACD,EAAA,EAAKE,MAAN,yBACA,6BAAK1C,EAAQK,OACb,sBAAMH,MAAO,CAAEC,MAAO,UAAWwC,SAAU,QAA3C,SAAsDP,EAAKpC,KAC3D,sBAAKE,MAAO,CAAEC,MAAO,UAAWyC,WAAY,QAA5C,UAAuD5C,EAAQC,OAA/D,mBCvEH6C,EARA,WACZ,OACG,wBAAQ5C,MAAO,CAAE6C,UAAW,SAAUC,OAAQ,IAAKC,KAAM,IAAKC,SAAU,WAAYC,MAAO,QAA3F,SACG,uD,QCFHT,E,MAAQU,EAAOC,GAAV,2XA6BIC,EARA,WACZ,OACG,8BACG,cAACZ,EAAD,CAAOa,UAAU,mCAAjB,+C,0EC4GMC,EA/HC,WACb,MAA8BtC,mBAAS,IAAvC,mBAAOuC,EAAP,KAAgBC,EAAhB,KACA,EAAoCxC,mBAAS,IAA7C,mBAAOyC,EAAP,KAAmBC,EAAnB,KACA,EAA4C1C,qBAA5C,mBAAO2C,EAAP,KAAuBC,EAAvB,KAGMC,EAAU,uCAAG,sBAAAC,EAAA,sDAChBC,IACIC,IADJ,eACwB,CAAEC,QAAS,CAAE,8BAA+B,OAChEC,MAAK,SAACvC,GACJ,GAAIA,EAAU,CACX,IAAM4B,EAAU5B,EAASG,KAAKA,KAGxBqC,EAAc,YACd,IAAIC,IAAJ,sBAAYb,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAEzE,QAAQM,SAAzC,YAAmDoD,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAExE,QAAQK,YACpFoE,OACFb,EAAcS,GACdP,EAAkBY,iBAAOL,IACzBX,EAAWD,OAGhBkB,OAAM,SAAC1C,GAAD,OAAWR,QAAQC,IAAIO,MAhBjB,2CAAH,qDAoBV2C,EAAcjB,EAAWY,KAAI,SAAClC,GAAD,OAAYwC,OAAOC,OAAO,CAAEC,MAAO1C,EAAQ2C,MAAO3C,OAM/E4C,EAHW,sBAAOxB,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAEzE,QAAQM,SAApC,YAA8CoD,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAExE,QAAQK,UAG1D6E,QAAO,SAAC7E,GAAD,OAAUA,IAASwD,KAAgBsB,OAStEC,EANc,sBAAO3B,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAEzE,YAA5B,YAAyC0D,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAExE,aAGxCkF,QAAO,SAACG,GAAD,OAAOA,EAAEhF,OAASwD,KAGnBU,KAAI,SAACe,GAAD,OAAOA,EAAErF,UAUvDsF,EAAgBC,eAAKC,UAASC,UAASC,uBAAaC,QAAOC,QAAOC,OAAlDN,CAAwDJ,GAC9E3D,QAAQC,IAAI6D,GAGZ,IAAMQ,EAAUtC,EAAQyB,QACrB,SAACV,GAAD,OAAOA,EAAEzE,QAAQM,OAASwD,GAAkBW,EAAExE,QAAQK,OAASwD,KAOlE,OAJAxC,qBAAU,WACP0C,MACA,IAGA,qCACG,mDACA,uBACA,eAACiC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACG,gCACG,+BACG,sCACA,kDACA,2CACA,uDAGN,gCACG,+BACG,oBAAIjG,MAAO,CAAE6C,UAAW,QAAxB,SACG,cAAC,IAAD,CACGqD,QAASxB,EACTyB,SAAU,SAACzE,GAAD,OAAOkC,EAAkBlC,EAAEmD,QACrCuB,YAAazC,EACb0C,aAAc1C,EACd2C,cAAY,MAGlB,6BAAKvB,IACL,6BAAK3E,EAASyF,EAASlC,EAAgBoB,KACvC,6BAAKM,YAId,uBAEA,4CACA,uBACA,eAACS,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACG,gCACG,+BACG,yCACA,oBAAIjG,MAAO,CAAEuG,gBAAiB,WAA9B,2BACA,oBAAIvG,MAAO,CAAEuG,gBAAiB,WAA9B,6BACA,oBAAIvG,MAAO,CAAEuG,gBAAiB,WAA9B,oBACA,oBAAIvG,MAAO,CAAEuG,gBAAiB,WAA9B,6BACA,oBAAIvG,MAAO,CAAEuG,gBAAiB,WAA9B,gCAGN,kCACG,uBACCV,GACEA,EAAQxB,KAAI,SAACC,GAAD,OACT,+BACG,oBAAItE,MAAO,CAAE6C,UAAW,QAAxB,SAAmCyB,EAAEkC,SACrC,oBAAIxG,MAAO,CAAEuG,gBAAiB,WAA9B,SAA4CjC,EAAEzE,QAAQM,OACtD,oBAAIH,MAAO,CAAEuG,gBAAiB,WAA9B,SAA4CjC,EAAEzE,QAAQE,SACtD,oBAAIC,MAAO,CAAEuG,gBAAiB,WAA9B,SAA4C3G,EAAO0E,EAAEzE,QAASyE,EAAExE,WAChE,oBAAIE,MAAO,CAAEuG,gBAAiB,WAA9B,SAA4CjC,EAAExE,QAAQC,SACtD,oBAAIC,MAAO,CAAEuG,gBAAiB,WAA9B,SAA4CjC,EAAExE,QAAQK,SANhDmE,EAAEmC,gBClGjBC,EAhBH,WACT,OACG,eAACC,EAAA,EAAD,CAAW3G,MAAO,CAAE6C,UAAW,UAA/B,UACG,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC+D,EAAD,IACA,uBACA,uBACA,uBACA,cAAC,EAAD,Q,eCXTC,EAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.2ef6c684.chunk.js","sourcesContent":["const winningPlays = ['ROCK-SCISSORS', 'SCISSORS-PAPER', 'PAPER-ROCK']\r\n\r\nexport const Result = (playerA, playerB) => {\r\n   if (!playerA || !playerB) return null\r\n\r\n   if (playerA.played === playerB.played) return <div style={{ color: 'green' }}>DRAW!!!</div>\r\n\r\n   if (winningPlays.includes(playerA.played + '-' + playerB.played)) {\r\n      return <div style={{ color: '#BB5A5A' }}>{playerA.name}</div>\r\n   }\r\n\r\n   return <div style={{ color: '#046582' }}>{playerB.name}</div>\r\n}\r\n\r\n// TODO: Win ratio of specific player\r\nexport const WinRatio = (array, getSelectedPlayerName, games) => {\r\n   let win = 0\r\n   array.forEach((arr) => {\r\n      let [selectedPlayer, otherPlayer] =\r\n         getSelectedPlayerName === arr.playerA.name ? [arr.playerA, arr.playerB] : [arr.playerB, arr.playerA]\r\n\r\n      win += winningPlays.includes(selectedPlayer.played + '-' + otherPlayer.played) ? 1 : 0\r\n   })\r\n\r\n   return `${(win / games) * 100}% (${win} of ${games})`\r\n}\r\n","import { Card, Col, Row } from 'react-bootstrap'\r\nimport { FaHandPaper, FaHandRock, FaHandScissors } from 'react-icons/fa'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport { Result } from './utils/calculations'\r\n\r\nconst CurrentGame = () => {\r\n   const ws = useRef(null)\r\n   const [playerA, setPlayerA] = useState({})\r\n   const [playerB, setPlayerB] = useState({})\r\n\r\n   useEffect(() => {\r\n      ws.current = new WebSocket('ws://bad-api-assignment.reaktor.com/rps/live')\r\n      ws.current.onopen = () => console.log('ws opened')\r\n\r\n      if (!ws.current) return\r\n\r\n      ws.current.onmessage = (e) => {\r\n         const response = JSON.parse(e.data)\r\n         try {\r\n            setPlayerA({\r\n               name: JSON.parse(response).playerA.name,\r\n               played: JSON.parse(response).playerA.played,\r\n            })\r\n\r\n            setPlayerB({\r\n               name: JSON.parse(response).playerB.name,\r\n               played: JSON.parse(response).playerB.played,\r\n            })\r\n         } catch (error) {\r\n            console.log(error)\r\n         }\r\n      }\r\n      ws.current.onclose = () => ws.current.close()\r\n\r\n      return () => ws.current.close()\r\n   }, [])\r\n\r\n   const Icon = (player) => {\r\n      switch (player.played) {\r\n         case 'ROCK':\r\n            return <FaHandRock />\r\n         case 'SCISSORS':\r\n            return <FaHandScissors />\r\n         case 'PAPER':\r\n            return <FaHandPaper />\r\n         default:\r\n            return <div>...</div>\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         <h2>Current Game</h2>\r\n         <br />\r\n         <Row>\r\n            <Col>\r\n               <Card style={{ height: '15rem' }}>\r\n                  <Card.Title> Player A </Card.Title>\r\n                  <h3>{playerA.name}</h3>\r\n                  <span style={{ color: '#BB5A5A', fontSize: '5rem' }}>{Icon(playerA)}</span>\r\n                  <div style={{ color: '#BB5A5A', fontWeight: 'bold' }}>{playerA.played}</div>\r\n               </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n               <Card style={{ height: '10rem', border: 'none' }}>\r\n                  <Card.Title>\r\n                     <h2>RESULT</h2>\r\n                  </Card.Title>\r\n                  <br />\r\n                  <h1>\r\n                     <b>{Result(playerA, playerB)}</b>\r\n                  </h1>\r\n               </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n               <Card style={{ height: '15rem' }}>\r\n                  <Card.Title> Player B </Card.Title>\r\n                  <h3>{playerB.name}</h3>\r\n                  <span style={{ color: '#046582', fontSize: '5rem' }}>{Icon(playerB)}</span>\r\n                  <div style={{ color: '#046582', fontWeight: 'bold' }}>{playerB.played} </div>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default CurrentGame\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n   return (\r\n      <footer style={{ textAlign: 'center', bottom: '0', left: '0', position: 'relative', width: '100%' }}>\r\n         <p>&#169; HIEN TRAN 2021</p>\r\n      </footer>\r\n   )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1`\r\n   font-family: 'Pacifico', cursive;\r\n   background-image: linear-gradient(\r\n      to right,\r\n      #d16ba5,\r\n      #c777b9,\r\n      #ba83ca,\r\n      #aa8fd8,\r\n      #9a9ae1,\r\n      #8aa7ec,\r\n      #79b3f4,\r\n      #69bff8,\r\n      #52cffe,\r\n      #41dfff,\r\n      #46eefa,\r\n      #5ffbf1\r\n   );\r\n   color: #fff;\r\n   font-weight: bold;\r\n   padding: 50px;\r\n`\r\nconst Header = () => {\r\n   return (\r\n      <div>\r\n         <Title className=\"jumbotron text-center bg-primary\">Rock-Paper-Scissors Statistics</Title>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Result, WinRatio } from './utils/calculations'\r\nimport { countBy, entries, flow, head, last, maxBy, partialRight, sample } from 'lodash'\r\n\r\nimport Select from 'react-select'\r\nimport Table from 'react-bootstrap/Table'\r\nimport axios from 'axios'\r\n\r\nconst History = () => {\r\n   const [history, setHistory] = useState([])\r\n   const [playerList, setPlayerList] = useState([])\r\n   const [specificPlayer, setSpecificPlayer] = useState()\r\n\r\n   //! Avoids CORS issues: https://create-react-app.dev/docs/proxying-api-requests-in-development/\r\n   const fetchStats = async () => {\r\n      axios\r\n         .get(`/rps/history`, { headers: { 'Access-Control-Allow-Origin': '*' } })\r\n         .then((response) => {\r\n            if (response) {\r\n               const history = response.data.data\r\n\r\n               // Sort names array with no duplicate\r\n               const playerNames = [\r\n                  ...new Set([...history.map((h) => h.playerA.name), ...history.map((h) => h.playerB.name)]),\r\n               ].sort()\r\n               setPlayerList(playerNames)\r\n               setSpecificPlayer(sample(playerNames))\r\n               setHistory(history)\r\n            }\r\n         })\r\n         .catch((error) => console.log(error))\r\n   }\r\n\r\n   // Get options data for Select\r\n   const optionNames = playerList.map((player) => Object.create({ value: player, label: player }))\r\n\r\n   // Get players' name\r\n   const playerNames = [...history.map((h) => h.playerA.name), ...history.map((h) => h.playerB.name)]\r\n\r\n   // TODO: Number of games played\r\n   const numberOfGames = playerNames.filter((name) => name === specificPlayer).length\r\n\r\n   // Get players' details\r\n   const playersDetails = [...history.map((h) => h.playerA), ...history.map((h) => h.playerB)]\r\n\r\n   // Get specific player details\r\n   const specificPlayerInfo = playersDetails.filter((p) => p.name === specificPlayer)\r\n\r\n   // Get specific player played\r\n   const specificPlayerPlayed = specificPlayerInfo.map((f) => f.played)\r\n\r\n   // TODO: Get most specific player played hand\r\n   /**\r\n    * & https://stackoverflow.com/questions/49731282/the-most-frequent-item-of-an-array-using-lodash\r\n    * * _countBy(): get an object of element:count\r\n    * * _.entries(): Convert to an array of tuples\r\n    * *_.maxBy(_.last): Find the max of last element of array (_.last), since the count value is the 2nd item in the tuple.\r\n    * *_.head(): Extract the element from the tuple\r\n    */\r\n   const maxPlayedHand = flow(countBy, entries, partialRight(maxBy, last), head)(specificPlayerPlayed)\r\n   console.log(maxPlayedHand)\r\n\r\n   // Matches that specific player played\r\n   const matches = history.filter(\r\n      (h) => h.playerA.name === specificPlayer || h.playerB.name === specificPlayer\r\n   )\r\n\r\n   useEffect(() => {\r\n      fetchStats()\r\n   }, [])\r\n\r\n   return (\r\n      <>\r\n         <h2>Player Statistics</h2>\r\n         <br />\r\n         <Table striped bordered hover>\r\n            <thead>\r\n               <tr>\r\n                  <th>Name</th>\r\n                  <th>Numbers of games</th>\r\n                  <th>Win ratio</th>\r\n                  <th>Most played hand</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               <tr>\r\n                  <td style={{ textAlign: 'left' }}>\r\n                     <Select\r\n                        options={optionNames}\r\n                        onChange={(e) => setSpecificPlayer(e.value)}\r\n                        placeholder={specificPlayer}\r\n                        defaultValue={specificPlayer}\r\n                        isSearchable\r\n                     />\r\n                  </td>\r\n                  <td>{numberOfGames}</td>\r\n                  <td>{WinRatio(matches, specificPlayer, numberOfGames)}</td>\r\n                  <td>{maxPlayedHand}</td>\r\n               </tr>\r\n            </tbody>\r\n         </Table>\r\n         <br />\r\n\r\n         <h2>Statistics</h2>\r\n         <br />\r\n         <Table striped bordered hover>\r\n            <thead>\r\n               <tr>\r\n                  <th>Game ID</th>\r\n                  <th style={{ backgroundColor: '#FF5C58' }}>Player A Name</th>\r\n                  <th style={{ backgroundColor: '#F38BA0' }}>Player A Played</th>\r\n                  <th style={{ backgroundColor: '#E7FBBE' }}>RESULT</th>\r\n                  <th style={{ backgroundColor: '#949CDF' }}>Player B Played</th>\r\n                  <th style={{ backgroundColor: '#6998AB' }}>Player B Name</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               <tr></tr>\r\n               {matches &&\r\n                  matches.map((h) => (\r\n                     <tr key={h.t}>\r\n                        <td style={{ textAlign: 'left' }}>{h.gameId}</td>\r\n                        <td style={{ backgroundColor: '#FE8F8F' }}>{h.playerA.name}</td>\r\n                        <td style={{ backgroundColor: '#FFBCBC' }}>{h.playerA.played}</td>\r\n                        <td style={{ backgroundColor: '#FFFDDE' }}>{Result(h.playerA, h.playerB)}</td>\r\n                        <td style={{ backgroundColor: '#A7C5EB' }}>{h.playerB.played}</td>\r\n                        <td style={{ backgroundColor: '#B1D0E0' }}>{h.playerB.name}</td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </Table>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default History\r\n","import { Container } from 'react-bootstrap'\nimport CurrentGame from './components/CurrentGame'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport Stats from './components/Stats'\n\nconst App = () => {\n   return (\n      <Container style={{ textAlign: 'center' }}>\n         <Header />\n         <br />\n         <CurrentGame />\n         <br />\n         <Stats />\n         <br />\n         <br />\n         <br />\n         <Footer />\n      </Container>\n   )\n}\n\nexport default App\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n)\n"],"sourceRoot":""}